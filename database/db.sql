DROP DATABASE IF EXISTS DB_RSIC_Echoes;

CREATE DATABASE DB_RSIC_Echoes;
USE DB_RSIC_Echoes;

CREATE TABLE Usuarios (
    IdUsuario BINARY(16) PRIMARY KEY DEFAULT (UUID_TO_BIN(UUID())),
    Alias VARCHAR(50) NOT NULL UNIQUE,
    Nombre VARCHAR(50) NOT NULL,
    Apellido VARCHAR(50) NOT NULL,
    Email VARCHAR(80) UNIQUE,
    Contrasena VARCHAR(30) NOT NULL,
    RutaAvatar VARCHAR(255),
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Publicaciones (
    IdPublicacion INT AUTO_INCREMENT PRIMARY KEY,
    IdUsuario INT NOT NULL,
    Contenido VARCHAR(255) NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CantComentarios INT DEFAULT 0,
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT FK_Publicaciones_Usuario FOREIGN KEY (IdUsuario) REFERENCES Usuarios(IdUsuario)
);

CREATE TABLE PublicacionComentarios (
    IdComentario INT AUTO_INCREMENT PRIMARY KEY,
    IdPublicacion INT NOT NULL,
    IdUsuario INT NOT NULL,
    Contenido VARCHAR(150) NOT NULL,
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT FK_Comentarios_Publicacion FOREIGN KEY (IdPublicacion) REFERENCES Publicaciones(IdPublicacion),
    CONSTRAINT FK_Comentarios_Usuario FOREIGN KEY (IdUsuario) REFERENCES Usuarios(IdUsuario)
);

CREATE TABLE TipoReacciones (
    IdTipoReaccion INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(20) NOT NULL,
    Icono VARCHAR(255) NOT NULL,
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE CantReacciones (
    IdPublicacion INT NOT NULL,
    IdTipoReaccion INT NOT NULL,
    Cant INT DEFAULT 0,
    PRIMARY KEY(IdPublicacion, IdTipoReaccion),
    CONSTRAINT FK_CantReacciones_Publicacion FOREIGN KEY (IdPublicacion) REFERENCES Publicaciones(IdPublicacion),
    CONSTRAINT FK_CantReacciones_TipoReaccion FOREIGN KEY (IdTipoReaccion) REFERENCES TipoReacciones(IdTipoReaccion)
);

CREATE TABLE PublicacionReacciones (
    IdPublicacion INT NOT NULL,
    IdUsuario INT NOT NULL,
    IdTipoReaccion INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY(IdPublicacion, IdUsuario, IdTipoReaccion),
    CONSTRAINT FK_Reacciones_Publicacion FOREIGN KEY (IdPublicacion) REFERENCES Publicaciones(IdPublicacion),
    CONSTRAINT FK_Reacciones_Usuario FOREIGN KEY (IdUsuario) REFERENCES Usuarios(IdUsuario),
    CONSTRAINT FK_Reacciones_TipoReaccion FOREIGN KEY (IdTipoReaccion) REFERENCES TipoReacciones(IdTipoReaccion)
);

CREATE TABLE Chats (
    IdChat INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(50),
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE ChatsMiembros (
    IdChat INT NOT NULL,
    IdUsuario INT NOT NULL,
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY(IdChat, IdUsuario),
    CONSTRAINT FK_ChatsMiembros_Chat FOREIGN KEY (IdChat) REFERENCES Chats(IdChat),
    CONSTRAINT FK_ChatsMiembros_Usuario FOREIGN KEY (IdUsuario) REFERENCES Usuarios(IdUsuario)
);

CREATE TABLE Mensajes (
    IdMensaje INT AUTO_INCREMENT PRIMARY KEY,
    IdChat INT NOT NULL,
    IdUsuarioRemitente INT NOT NULL,
    Contenido VARCHAR(255) NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    RgStatus BIT NOT NULL DEFAULT 1,
    DtCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DtAct TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT FK_Mensajes_Chat FOREIGN KEY (IdChat) REFERENCES Chats(IdChat),
    CONSTRAINT FK_Mensajes_Usuario FOREIGN KEY (IdUsuarioRemitente) REFERENCES Usuarios(IdUsuario)
);


-- TRIGGERS : PublicacionReacciones / INSERT
DELIMITER //
CREATE TRIGGER AddCantReacciones
AFTER INSERT ON PublicacionReacciones
FOR EACH ROW
BEGIN
    IF EXISTS (SELECT IdPublicacion, IdTipoReaccion FROM CantReacciones WHERE IdPublicacion = NEW.IdPublicacion AND IdTipoReaccion = NEW.IdTipoReaccion) THEN
        UPDATE CantReacciones SET Cant = Cant + 1 WHERE IdPublicacion = NEW.IdPublicacion AND IdTipoReaccion = NEW.IdTipoReaccion;
    ELSE
        INSERT INTO CantReacciones (IdPublicacion, IdTipoReaccion, Cant) VALUES (NEW.IdPublicacion, NEW.IdTipoReaccion, 1);
    END IF;
END //
DELIMITER ;


-- TRIGGERS : PublicacionReacciones / UPDATE
DELIMITER //
CREATE TRIGGER UpdateCantReacciones
AFTER UPDATE ON PublicacionReacciones 
FOR EACH ROW
BEGIN
    UPDATE CantReacciones SET Cant = Cant - 1 
    WHERE IdPublicacion = OLD.IdPublicacion AND IdTipoReaccion = OLD.IdTipoReaccion;

    DELETE FROM CantReacciones 
    WHERE IdPublicacion = OLD.IdPublicacion AND IdTipoReaccion = OLD.IdTipoReaccion AND Cant = 0;

    IF EXISTS (SELECT IdPublicacion, IdTipoReaccion FROM CantReacciones WHERE IdPublicacion = NEW.IdPublicacion AND IdTipoReaccion = NEW.IdTipoReaccion) THEN
        UPDATE CantReacciones SET Cant = Cant + 1
        WHERE IdPublicacion = NEW.IdPublicacion AND IdTipoReaccion = NEW.IdTipoReaccion;
    ELSE
        INSERT INTO CantReacciones (IdPublicacion, IdTipoReaccion, Cant)
        VALUES
        (NEW.IdPublicacion, NEW.IdTipoReaccion, 1);
    END IF;
END //
DELIMITER;


-- TRIGGERS : PublicacionReacciones / DELETE
DELIMITER //
CREATE TRIGGER RemoveCantReacciones
AFTER DELETE ON PublicacionReacciones
FOR EACH ROW
BEGIN
    UPDATE CantReacciones SET Cant = Cant - 1 
    WHERE IdPublicacion = OLD.IdPublicacion AND IdTipoReaccion = OLD.IdTipoReaccion;

    DELETE FROM CantReacciones 
    WHERE IdPublicacion = OLD.IdPublicacion AND IdTipoReaccion = OLD.IdTipoReaccion AND Cant = 0;
END //
DELIMITER;


-- TRIGGERS : PublicacionComentarios / INSERT
DELIMITER //
CREATE TRIGGER AddCantComentarios
AFTER INSERT ON PublicacionComentarios 
FOR EACH ROW
BEGIN 
    UPDATE Publicaciones
    SET CantComentarios = CantComentarios + 1
    WHERE IdPublicacion = NEW.IdPublicacion;
END //
DELIMITER;


-- TRIGGERS : PublicacionComentarios / UPDATE
DELIMITER //
CREATE TRIGGER RemoveCantComentarios
AFTER UPDATE ON PublicacionComentarios
FOR EACH ROW
BEGIN
    IF OLD.RgStatus = 1 AND NEW.RgStatus = 0 THEN
        UPDATE Publicaciones
        SET CantComentarios = CantComentarios - 1
        WHERE IdPublicacion = OLD.IdPublicacion;
    END IF;
END //
DELIMITER;




-- Datos iniciales para TipoReacciones
INSERT INTO TipoReacciones (Nombre, Icono) VALUES
('Like', '<i class="fa-regular fa-thumbs-up"></i>'),
('Me encanta', '<i class="fa-solid fa-heart"></i>'),
('Me divierte', '<i class="fa-solid fa-face-laugh-squint"></i>'),
('Me entristece', '<i class="fa-regular fa-face-sad-tear"></i>'),
('Me enoja', '<i class="fa-regular fa-face-angry"></i>');
COMMIT;


-- Datos iniciales para Usuarios
INSERT INTO Usuarios (Nombre, Apellido, Alias, Email, Contrasena, RutaAvatar) VALUES
('Luis Bryan', 'Cabello Ortiz', 'bryan-co', 'lcabelloo@isise.edu.pe', '12345', 'https://rutaxd/avatars/bryan-co.webp'),
('Diego Mart√≠nez', 'L√≥pez P√©rez', 'diego-martinez', 'diegomartinez@gmail.com', 'XyZ12345', 'https://rutaxd/avatars/diego-martinez.webp'),
('Sof√≠a L√≥pez', 'Gonz√°lez Mart√≠nez', 'sofia-lopez', 'sofialopez@yahoo.com', 'AbC67890', 'https://rutaxd/avatars/sofia-lopez.webp'),
('Carlos Ram√≠rez', 'Hern√°ndez Garc√≠a', 'carlos-ramirez', 'carlosramirez@hotmail.com', '123456ab', 'https://rutaxd/avatars/carlos-ramirez.webp'),
('Ana Garc√≠a', 'Mart√≠nez L√≥pez', 'ana-garcia', 'anagarcia@outlook.com', 'password123', 'https://rutaxd/avatars/ana-garcia.webp');
COMMIT;


-- Datos iniciales para Publicaciones
INSERT INTO Publicaciones (IdUsuario, Contenido) VALUES
(1, 'Holaaaaa, bienvenidos üòÑ'),
(1, 'Probando publicaciones üöÄ'),
(2, '¬°Hola a todos! üëã'),
(3, '¬°Buenos d√≠as! ‚òÄÔ∏è'),
(4, '¬øC√≥mo est√°n? üòä'),
(5, '¬°Feliz d√≠a! üéâ'),
(2, '¬°Estoy emocionado por compartir esto! üéâ'),
(3, '¬°Hola mundo! üëã'),
(4, '¬°Qu√© d√≠a tan hermoso! ‚òÄÔ∏è'),
(5, '¬°Listo para comenzar el d√≠a! üí™'),
(1, '¬°Feliz jueves! üòä'),
(2, '¬°Nuevo d√≠a, nuevas oportunidades! üíº');
COMMIT;

INSERT INTO Publicaciones (IdUsuario, Contenido) VALUES
(1, '¬øQui√©n est√° emocionado por el fin de semana? üéâ'),
(2, '¬°Acabo de terminar un nuevo proyecto! üöÄ'),
(3, '¬°Hoy es un gran d√≠a para aprender algo nuevo! üìö'),
(4, '¬øAlguien quiere salir a correr ma√±ana? üèÉ‚Äç‚ôÇÔ∏è'),
(5, '¬°No puedo esperar para ver la nueva pel√≠cula! üé¨'),
(1, '¬°Feliz cumplea√±os a todos los que celebran hoy! üéÇ'),
(2, '¬°La vida es bella! üå∏'),
(3, '¬øAlg√∫n consejo para mejorar en programaci√≥n? üíª'),
(4, '¬°Amo los d√≠as soleados! ‚òÄÔ∏è'),
(5, '¬°El caf√© de la ma√±ana es lo mejor! ‚òï');
COMMIT;


-- Datos iniciales para PublicacionComentarios
INSERT INTO PublicacionComentarios (IdPublicacion, IdUsuario, Contenido) VALUES
(1, 3, '¬°Gracias por la bienvenida! üòÑ'),
(1, 4, 'Hola, ¬°qu√© lindo empezar el d√≠a as√≠! üöÄ'),
(2, 5, '¬°Me encanta tu entusiasmo! üëã'),
(2, 1, '¬°Genial! ¬°Pronto tendremos m√°s publicaciones emocionantes! ‚òÄÔ∏è'),
(3, 2, '¬°Hola Diego! ¬øC√≥mo est√°s? üòä'),
(4, 3, '¬°Buenos d√≠as, Sof√≠a! ‚òÄÔ∏è'),
(5, 4, '¬°Estoy muy bien, gracias! ¬øY t√∫? üòÑ'),
(6, 5, '¬°Feliz d√≠a para ti tambi√©n, Ana! üéâ'),
(7, 1, '¬°Qu√© emoci√≥n! ¬°Comparte m√°s detalles! üëã'),
(8, 2, '¬°Hola mundo! ¬øQu√© tal tu d√≠a? üåç');
COMMIT;


INSERT INTO PublicacionComentarios (IdPublicacion, IdUsuario, Contenido) VALUES
(13, 2, '¬°Yo tambi√©n! üéâ'),
(14, 3, '¬°Felicidades por tu proyecto! üöÄ'),
(15, 4, '¬°Siempre es un buen d√≠a para aprender! üìö'),
(16, 5, '¬°Me apunto! üèÉ‚Äç‚ôÇÔ∏è'),
(17, 1, '¬°Yo tambi√©n quiero ver esa pel√≠cula! üé¨'),
(18, 2, '¬°Feliz cumplea√±os! üéÇ'),
(19, 3, '¬°S√≠, la vida es bella! üå∏'),
(20, 4, '¬°Practica todos los d√≠as! üíª'),
(21, 5, '¬°Los d√≠as soleados son los mejores! ‚òÄÔ∏è'),
(22, 1, '¬°El caf√© es lo mejor para empezar el d√≠a! ‚òï');
COMMIT;



-- Datos iniciales para PublicacionReacciones
INSERT INTO PublicacionReacciones (IdPublicacion, IdUsuario, IdTipoReaccion) VALUES 
(3, 1, 1),
(3, 2, 2),
(3, 3, 2),
(3, 4, 3),
(1, 1, 1),
(2, 2, 1),
(2, 4, 1),
(13, 1, 5),
(13, 2, 2),
(13, 4, 2),
(13, 5, 1);
COMMIT;


-- Datos iniciales para Chats
INSERT INTO Chats (Nombre) VALUES 
('Chat General'),
('Chat de Programaci√≥n'),
('Chat de Deportes'),
('Chat de Pel√≠culas'),
('Chat de M√∫sica'),
('Chat de Viajes');
COMMIT;

INSERT INTO Chats(IdChat) Values (null),
(null),
(null),
(null),
(null);


-- Datos iniciales para ChatsMiembros
INSERT INTO ChatsMiembros (IdChat, IdUsuario) VALUES
(1, 1),
(1, 2),
(2, 3),
(2, 4),
(3, 5),
(3, 1),
(4, 2),
(4, 3),
(5, 4),
(5, 5);
COMMIT;


-- Datos iniciales para Mensajes
INSERT INTO Mensajes (IdChat, IdUsuarioRemitente, Contenido) VALUES
(1, 2, 'Bueno, este es mi chat privado xd'),
(2, 3, '¬øCu√°l es tu lenguaje de programaci√≥n favorito?'),
(2, 4, 'Me gusta Python, ¬øy t√∫?'),
(3, 5, '¬øHas visto la √∫ltima pel√≠cula de Marvel?'),
(3, 1, '¬°S√≠, me encant√≥!'),
(4, 2, '¬øQu√© tipo de m√∫sica te gusta?'),
(4, 3, 'Escucho de todo, pero prefiero rock.'),
(5, 4, '¬øCu√°l es tu destino de viaje so√±ado?'),
(5, 5, 'Me encantar√≠a ir a Jap√≥n.');

SELECT * FROM usuarios;
SELECT * FROM publicaciones;
SELECT * FROM cantreacciones;
SELECT * FROM chats;
SELECT * FROM chatsmiembros;
SELECT * FROM publicacioncomentarios;
SELECT * FROM mensajes;
SELECT * FROM publicacionreacciones;
SELECT * FROM tiporeacciones;